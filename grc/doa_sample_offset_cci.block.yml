id: doa_sample_offset_cci
label: sample_offset_cci
category: '[doa]'

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
- id: vector_len
  label: Vector Length
  dtype: int
  default: 1
- id: num_xcorr
  label: Iterations
  dtype: int
  default: 1
- id: showports
  label: Show Msg Ports
  dtype: enum
  options: [FALSE, TRUE]
  option_labels: ["Yes", "No"]

#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in0
  dtype: complex
  vlen: ${vector_len}
- label: in1
  dtype: complex
  vlen: ${vector_len}
- label: recalc
  domain: message
  optional: 1


#- label: ...
#  domain: ...
#  dtype: ...
#  vlen: ...
#  optional: ...

outputs:
  - name: out
    dtype: int
#- label: ...
#  domain: ...
#  dtype: ...
#  vlen: ...
#  optional: ...

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.

templates:
  imports: from gnuradio import doa
  make: doa.sample_offset_cci(${vector_len}, ${num_xcorr})


file_format: 1
